/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type {
  IProtocolRevenueShareEvent,
  IProtocolRevenueShareEventInterface,
} from "../IProtocolRevenueShareEvent";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Collect",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "fund",
        type: "address",
      },
    ],
    name: "SetDaoFund",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "factory",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "rate",
        type: "uint256",
      },
    ],
    name: "SetFactoryGrowthFundRate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "fund",
        type: "address",
      },
    ],
    name: "SetGrowthFund",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "rate",
        type: "uint256",
      },
    ],
    name: "SetGrowthFundRate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "SetMinimumRevenue",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "SetRevenueToken",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "feeToken",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "revenueToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "output",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "growthFundShare",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "daoFundShare",
        type: "uint256",
      },
    ],
    name: "Share",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "broker",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isVerified",
        type: "bool",
      },
    ],
    name: "VerifyBroker",
    type: "event",
  },
];

export class IProtocolRevenueShareEvent__factory {
  static readonly abi = _abi;
  static createInterface(): IProtocolRevenueShareEventInterface {
    return new utils.Interface(_abi) as IProtocolRevenueShareEventInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IProtocolRevenueShareEvent {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as IProtocolRevenueShareEvent;
  }
}
