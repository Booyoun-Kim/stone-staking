/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Token, TokenInterface } from "../Token";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001ceb38038062001ceb8339818101604052810190620000379190620002f9565b8181816003908051906020019062000051929190620000ac565b5080600490805190602001906200006a929190620000ac565b505050620000a17f3c0720ffcc84d89b0c6c5b824755d011e9dcd7a4222b8510f632087b9de3d59a60001b620000a960201b60201c565b5050620003e3565b50565b828054620000ba90620003ad565b90600052602060002090601f016020900481019282620000de57600085556200012a565b82601f10620000f957805160ff19168380011785556200012a565b828001600101855582156200012a579182015b82811115620001295782518255916020019190600101906200010c565b5b5090506200013991906200013d565b5090565b5b80821115620001585760008160009055506001016200013e565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620001c5826200017a565b810181811067ffffffffffffffff82111715620001e757620001e66200018b565b5b80604052505050565b6000620001fc6200015c565b90506200020a8282620001ba565b919050565b600067ffffffffffffffff8211156200022d576200022c6200018b565b5b62000238826200017a565b9050602081019050919050565b60005b838110156200026557808201518184015260208101905062000248565b8381111562000275576000848401525b50505050565b6000620002926200028c846200020f565b620001f0565b905082815260208101848484011115620002b157620002b062000175565b5b620002be84828562000245565b509392505050565b600082601f830112620002de57620002dd62000170565b5b8151620002f08482602086016200027b565b91505092915050565b6000806040838503121562000313576200031262000166565b5b600083015167ffffffffffffffff8111156200033457620003336200016b565b5b6200034285828601620002c6565b925050602083015167ffffffffffffffff8111156200036657620003656200016b565b5b6200037485828601620002c6565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620003c657607f821691505b60208210811415620003dd57620003dc6200037e565b5b50919050565b6118f880620003f36000396000f3fe608060405234801561001057600080fd5b50600436106100df5760003560e01c806340c10f191161008c5780639dc29fac116100665780639dc29fac14610238578063a457c2d714610254578063a9059cbb14610284578063dd62ed3e146102b4576100df565b806340c10f19146101ce57806370a08231146101ea57806395d89b411461021a576100df565b806323b872dd116100bd57806323b872dd14610150578063313ce56714610180578063395093511461019e576100df565b806306fdde03146100e4578063095ea7b31461010257806318160ddd14610132575b600080fd5b6100ec6102e4565b6040516100f99190610fee565b60405180910390f35b61011c600480360381019061011791906110a9565b610376565b6040516101299190611104565b60405180910390f35b61013a610399565b604051610147919061112e565b60405180910390f35b61016a60048036038101906101659190611149565b6103a3565b6040516101779190611104565b60405180910390f35b6101886103d2565b60405161019591906111b8565b60405180910390f35b6101b860048036038101906101b391906110a9565b6103db565b6040516101c59190611104565b60405180910390f35b6101e860048036038101906101e391906110a9565b610412565b005b61020460048036038101906101ff91906111d3565b6104a4565b604051610211919061112e565b60405180910390f35b6102226104ec565b60405161022f9190610fee565b60405180910390f35b610252600480360381019061024d91906110a9565b61057e565b005b61026e600480360381019061026991906110a9565b610610565b60405161027b9190611104565b60405180910390f35b61029e600480360381019061029991906110a9565b610687565b6040516102ab9190611104565b60405180910390f35b6102ce60048036038101906102c99190611200565b6106aa565b6040516102db919061112e565b60405180910390f35b6060600380546102f39061126f565b80601f016020809104026020016040519081016040528092919081815260200182805461031f9061126f565b801561036c5780601f106103415761010080835404028352916020019161036c565b820191906000526020600020905b81548152906001019060200180831161034f57829003601f168201915b5050505050905090565b600080610381610731565b905061038e818585610739565b600191505092915050565b6000600254905090565b6000806103ae610731565b90506103bb858285610904565b6103c6858585610990565b60019150509392505050565b60006012905090565b6000806103e6610731565b90506104078185856103f885896106aa565b61040291906112d0565b610739565b600191505092915050565b61043e7fb145c66b6eed87f6005291c4c4f7620d973310e237de3fb172b63e062fc933e760001b610c11565b61046a7fc6c6cd976087bf29d6eaf95486385273733c981e5db3a4e00a378c8c680699a660001b610c11565b6104967f6b0a0b34923223486ddc62680ad09f57ff607e0e269616f2b588ec184dc6e88160001b610c11565b6104a08282610c14565b5050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546104fb9061126f565b80601f01602080910402602001604051908101604052809291908181526020018280546105279061126f565b80156105745780601f1061054957610100808354040283529160200191610574565b820191906000526020600020905b81548152906001019060200180831161055757829003601f168201915b5050505050905090565b6105aa7fe70ef33c0e499c95a8e06cb0320229e2e557459d44bf3f23751233860358d8e560001b610c11565b6105d67f81a377a22b08521f41ffd23a9a0cada612b7f32547e2a236730e85f387215bf560001b610c11565b6106027f6810008d88a3f199d225bd5b7705a5dd4d9bdb13f3f5364a27b0bba338e77acc60001b610c11565b61060c8282610d74565b5050565b60008061061b610731565b9050600061062982866106aa565b90508381101561066e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066590611398565b60405180910390fd5b61067b8286868403610739565b60019250505092915050565b600080610692610731565b905061069f818585610990565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156107a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107a09061142a565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610819576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610810906114bc565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516108f7919061112e565b60405180910390a3505050565b600061091084846106aa565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811461098a578181101561097c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097390611528565b60405180910390fd5b6109898484848403610739565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610a00576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109f7906115ba565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610a70576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a679061164c565b60405180910390fd5b610a7b838383610f4b565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610b01576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610af8906116de565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610b9491906112d0565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610bf8919061112e565b60405180910390a3610c0b848484610f50565b50505050565b50565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610c84576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c7b9061174a565b60405180910390fd5b610c9060008383610f4b565b8060026000828254610ca291906112d0565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610cf791906112d0565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610d5c919061112e565b60405180910390a3610d7060008383610f50565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610de4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ddb906117dc565b60405180910390fd5b610df082600083610f4b565b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610e76576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e6d9061186e565b60405180910390fd5b8181036000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508160026000828254610ecd919061188e565b92505081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610f32919061112e565b60405180910390a3610f4683600084610f50565b505050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610f8f578082015181840152602081019050610f74565b83811115610f9e576000848401525b50505050565b6000601f19601f8301169050919050565b6000610fc082610f55565b610fca8185610f60565b9350610fda818560208601610f71565b610fe381610fa4565b840191505092915050565b600060208201905081810360008301526110088184610fb5565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061104082611015565b9050919050565b61105081611035565b811461105b57600080fd5b50565b60008135905061106d81611047565b92915050565b6000819050919050565b61108681611073565b811461109157600080fd5b50565b6000813590506110a38161107d565b92915050565b600080604083850312156110c0576110bf611010565b5b60006110ce8582860161105e565b92505060206110df85828601611094565b9150509250929050565b60008115159050919050565b6110fe816110e9565b82525050565b600060208201905061111960008301846110f5565b92915050565b61112881611073565b82525050565b6000602082019050611143600083018461111f565b92915050565b60008060006060848603121561116257611161611010565b5b60006111708682870161105e565b93505060206111818682870161105e565b925050604061119286828701611094565b9150509250925092565b600060ff82169050919050565b6111b28161119c565b82525050565b60006020820190506111cd60008301846111a9565b92915050565b6000602082840312156111e9576111e8611010565b5b60006111f78482850161105e565b91505092915050565b6000806040838503121561121757611216611010565b5b60006112258582860161105e565b92505060206112368582860161105e565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061128757607f821691505b6020821081141561129b5761129a611240565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006112db82611073565b91506112e683611073565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561131b5761131a6112a1565b5b828201905092915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000611382602583610f60565b915061138d82611326565b604082019050919050565b600060208201905081810360008301526113b181611375565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000611414602483610f60565b915061141f826113b8565b604082019050919050565b6000602082019050818103600083015261144381611407565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b60006114a6602283610f60565b91506114b18261144a565b604082019050919050565b600060208201905081810360008301526114d581611499565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b6000611512601d83610f60565b915061151d826114dc565b602082019050919050565b6000602082019050818103600083015261154181611505565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b60006115a4602583610f60565b91506115af82611548565b604082019050919050565b600060208201905081810360008301526115d381611597565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000611636602383610f60565b9150611641826115da565b604082019050919050565b6000602082019050818103600083015261166581611629565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b60006116c8602683610f60565b91506116d38261166c565b604082019050919050565b600060208201905081810360008301526116f7816116bb565b9050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b6000611734601f83610f60565b915061173f826116fe565b602082019050919050565b6000602082019050818103600083015261176381611727565b9050919050565b7f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b60006117c6602183610f60565b91506117d18261176a565b604082019050919050565b600060208201905081810360008301526117f5816117b9565b9050919050565b7f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60008201527f6365000000000000000000000000000000000000000000000000000000000000602082015250565b6000611858602283610f60565b9150611863826117fc565b604082019050919050565b600060208201905081810360008301526118878161184b565b9050919050565b600061189982611073565b91506118a483611073565b9250828210156118b7576118b66112a1565b5b82820390509291505056fea26469706673582212209d208669042ae3361674a1ce126e47e9e0e3748d09fcefc8e0932eccaa7e471564736f6c63430008090033";

type TokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Token__factory extends ContractFactory {
  constructor(...args: TokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    name_: string,
    symbol_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Token> {
    return super.deploy(name_, symbol_, overrides || {}) as Promise<Token>;
  }
  getDeployTransaction(
    name_: string,
    symbol_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name_, symbol_, overrides || {});
  }
  attach(address: string): Token {
    return super.attach(address) as Token;
  }
  connect(signer: Signer): Token__factory {
    return super.connect(signer) as Token__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenInterface {
    return new utils.Interface(_abi) as TokenInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Token {
    return new Contract(address, _abi, signerOrProvider) as Token;
  }
}
