/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { BaseContract, BigNumber, BigNumberish, Signer, utils } from "ethers";
import { EventFragment } from "@ethersproject/abi";
import { Listener, Provider } from "@ethersproject/providers";
import { TypedEventFilter, TypedEvent, TypedListener, OnEvent } from "./common";

export interface IMiningPoolManagerEventInterface extends utils.Interface {
  functions: {};

  events: {
    "CollectFee(address,address,uint256,uint256,uint256)": EventFragment;
    "CollectReward(address,address,uint256,uint256)": EventFragment;
    "DecreaseLiquidity(address,address,uint256,uint256,uint256,uint128)": EventFragment;
    "IncreaseLiquidity(address,address,uint256,uint256,uint256,uint128)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "CollectFee"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "CollectReward"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "DecreaseLiquidity"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "IncreaseLiquidity"): EventFragment;
}

export type CollectFeeEvent = TypedEvent<
  [string, string, BigNumber, BigNumber, BigNumber],
  {
    pool: string;
    recipient: string;
    positionId: BigNumber;
    amount0: BigNumber;
    amount1: BigNumber;
  }
>;

export type CollectFeeEventFilter = TypedEventFilter<CollectFeeEvent>;

export type CollectRewardEvent = TypedEvent<
  [string, string, BigNumber, BigNumber],
  { pool: string; recipient: string; positionId: BigNumber; amount: BigNumber }
>;

export type CollectRewardEventFilter = TypedEventFilter<CollectRewardEvent>;

export type DecreaseLiquidityEvent = TypedEvent<
  [string, string, BigNumber, BigNumber, BigNumber, BigNumber],
  {
    pool: string;
    owner: string;
    positionId: BigNumber;
    amount0: BigNumber;
    amount1: BigNumber;
    liquidity: BigNumber;
  }
>;

export type DecreaseLiquidityEventFilter =
  TypedEventFilter<DecreaseLiquidityEvent>;

export type IncreaseLiquidityEvent = TypedEvent<
  [string, string, BigNumber, BigNumber, BigNumber, BigNumber],
  {
    pool: string;
    owner: string;
    positionId: BigNumber;
    amount0: BigNumber;
    amount1: BigNumber;
    liquidity: BigNumber;
  }
>;

export type IncreaseLiquidityEventFilter =
  TypedEventFilter<IncreaseLiquidityEvent>;

export interface IMiningPoolManagerEvent extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: IMiningPoolManagerEventInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {};

  callStatic: {};

  filters: {
    "CollectFee(address,address,uint256,uint256,uint256)"(
      pool?: string | null,
      recipient?: string | null,
      positionId?: BigNumberish | null,
      amount0?: null,
      amount1?: null
    ): CollectFeeEventFilter;
    CollectFee(
      pool?: string | null,
      recipient?: string | null,
      positionId?: BigNumberish | null,
      amount0?: null,
      amount1?: null
    ): CollectFeeEventFilter;

    "CollectReward(address,address,uint256,uint256)"(
      pool?: string | null,
      recipient?: string | null,
      positionId?: BigNumberish | null,
      amount?: null
    ): CollectRewardEventFilter;
    CollectReward(
      pool?: string | null,
      recipient?: string | null,
      positionId?: BigNumberish | null,
      amount?: null
    ): CollectRewardEventFilter;

    "DecreaseLiquidity(address,address,uint256,uint256,uint256,uint128)"(
      pool?: string | null,
      owner?: string | null,
      positionId?: BigNumberish | null,
      amount0?: null,
      amount1?: null,
      liquidity?: null
    ): DecreaseLiquidityEventFilter;
    DecreaseLiquidity(
      pool?: string | null,
      owner?: string | null,
      positionId?: BigNumberish | null,
      amount0?: null,
      amount1?: null,
      liquidity?: null
    ): DecreaseLiquidityEventFilter;

    "IncreaseLiquidity(address,address,uint256,uint256,uint256,uint128)"(
      pool?: string | null,
      owner?: string | null,
      positionId?: BigNumberish | null,
      amount0?: null,
      amount1?: null,
      liquidity?: null
    ): IncreaseLiquidityEventFilter;
    IncreaseLiquidity(
      pool?: string | null,
      owner?: string | null,
      positionId?: BigNumberish | null,
      amount0?: null,
      amount1?: null,
      liquidity?: null
    ): IncreaseLiquidityEventFilter;
  };

  estimateGas: {};

  populateTransaction: {};
}
