/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { BaseContract, BigNumber, Signer, utils } from "ethers";
import { EventFragment } from "@ethersproject/abi";
import { Listener, Provider } from "@ethersproject/providers";
import { TypedEventFilter, TypedEvent, TypedListener, OnEvent } from "./common";

export interface IAirdropDistributorV2EventInterface extends utils.Interface {
  functions: {};

  events: {
    "Airdrop(address,address,uint128,uint256,uint256)": EventFragment;
    "Deposit(address,address,uint256,address)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "Airdrop"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "Deposit"): EventFragment;
}

export type AirdropEvent = TypedEvent<
  [string, string, BigNumber, BigNumber, BigNumber],
  {
    pool: string;
    token: string;
    amount: BigNumber;
    startTime: BigNumber;
    period: BigNumber;
  }
>;

export type AirdropEventFilter = TypedEventFilter<AirdropEvent>;

export type DepositEvent = TypedEvent<
  [string, string, BigNumber, string],
  { pool: string; token: string; amount: BigNumber; depositor: string }
>;

export type DepositEventFilter = TypedEventFilter<DepositEvent>;

export interface IAirdropDistributorV2Event extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: IAirdropDistributorV2EventInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {};

  callStatic: {};

  filters: {
    "Airdrop(address,address,uint128,uint256,uint256)"(
      pool?: string | null,
      token?: null,
      amount?: null,
      startTime?: null,
      period?: null
    ): AirdropEventFilter;
    Airdrop(
      pool?: string | null,
      token?: null,
      amount?: null,
      startTime?: null,
      period?: null
    ): AirdropEventFilter;

    "Deposit(address,address,uint256,address)"(
      pool?: string | null,
      token?: null,
      amount?: null,
      depositor?: null
    ): DepositEventFilter;
    Deposit(
      pool?: string | null,
      token?: null,
      amount?: null,
      depositor?: null
    ): DepositEventFilter;
  };

  estimateGas: {};

  populateTransaction: {};
}
