/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PriceOracle, PriceOracleInterface } from "../PriceOracle";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "DECIMAL",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "aggregateKlayPairReserve",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "quoteReserve",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "baseReserve",
            type: "uint256",
          },
        ],
        internalType: "struct PriceOracle.PairReserve",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "aggregateKlayStableReserve",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "quoteReserve",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "baseReserve",
            type: "uint256",
          },
        ],
        internalType: "struct PriceOracle.PairReserve",
        name: "reserve",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "aggregateStablePairReserve",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "quoteReserve",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "baseReserve",
            type: "uint256",
          },
        ],
        internalType: "struct PriceOracle.PairReserve",
        name: "reserve",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "consultKlayPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "consultPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_poolFactory",
        type: "address",
      },
      {
        internalType: "address",
        name: "_wklay",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "_stableCoins",
        type: "address[]",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "poolFactory",
    outputs: [
      {
        internalType: "contract IConcentratedLiquidityPoolFactory",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "stableCoins",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "wklay",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611747806100206000396000f3fe608060405234801561001057600080fd5b50600436106100df5760003560e01c80638194fe9e1161008c578063d597b32311610066578063d597b323146101db578063dbcd58e2146101e3578063f2fde38b14610203578063fec0be401461021657600080fd5b80638194fe9e146101a25780638da5cb5b146101b5578063b74c9c8d146101d357600080fd5b80636ab55fd9116100bd5780636ab55fd91461016f578063715018a61461018557806377a24f361461018f57600080fd5b806313c38570146100e45780634219dc401461011757806348455cfe1461015c575b600080fd5b6100f76100f23660046111ed565b610229565b604080518251815260209283015192810192909252015b60405180910390f35b6065546101379073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161010e565b61013761016a36600461120a565b610285565b610177600681565b60405190815260200161010e565b61018d6102bc565b005b61018d61019d3660046112c5565b61034e565b6101776101b03660046111ed565b6104d6565b60335473ffffffffffffffffffffffffffffffffffffffff16610137565b61017761075f565b6100f761076e565b6066546101379073ffffffffffffffffffffffffffffffffffffffff1681565b61018d6102113660046111ed565b610836565b6100f76102243660046111ed565b610966565b60408051808201909152600080825260208201526066546000906102639073ffffffffffffffffffffffffffffffffffffffff1684610a23565b6040805180820190915281518152602091820151918101919091529392505050565b6067818154811061029557600080fd5b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff16905081565b60335473ffffffffffffffffffffffffffffffffffffffff163314610342576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b61034c6000610ecc565b565b600054610100900460ff166103695760005460ff161561036d565b303b155b6103f9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a65640000000000000000000000000000000000006064820152608401610339565b600054610100900460ff1615801561043857600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000166101011790555b6065805473ffffffffffffffffffffffffffffffffffffffff8087167fffffffffffffffffffffffff000000000000000000000000000000000000000092831617909255606680549286169290911691909117905581516104a0906067906020850190611135565b5080156104d057600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff1690555b50505050565b600073ffffffffffffffffffffffffffffffffffffffff82161580610515575060665473ffffffffffffffffffffffffffffffffffffffff8381169116145b1561052857610522610f43565b92915050565b60005b6067548110156105ac578273ffffffffffffffffffffffffffffffffffffffff166067828154811061055f5761055f61138b565b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff16141561059a576105936006600a611509565b9392505050565b806105a481611515565b91505061052b565b5060006105b883610966565b90506105d7604051806040016040528060008152602001600081525090565b6105e084610229565b905060006105ec61076e565b80519091501561060d5781516020820151825161060a929190610f73565b82525b5080518251839061061f90839061154e565b905250602080820151908301805161063890839061154e565b9052506020820151158061064b57508151155b1561065a575060009392505050565b60008473ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156106a257600080fd5b505afa1580156106b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106da9190611566565b60ff169050601281101561072d578251610724906106fa6006600a611509565b610705846012611589565b61071090600a611509565b866020015161071f91906115a0565b610f73565b95945050505050565b825161072490601261074084600661154e565b61074a9190611589565b61075590600a611509565b8560200151610f73565b6000610769610f43565b905090565b6040805180820182526000808252602091820181905282518084019093528083529082018190525b606754811015610832576000606782815481106107b5576107b561138b565b600091825260208220015473ffffffffffffffffffffffffffffffffffffffff1691506107e182610229565b805185519192509085906107f690839061154e565b90525060208101516108089083611044565b84602001818151610819919061154e565b90525082915061082a905081611515565b915050610796565b5090565b60335473ffffffffffffffffffffffffffffffffffffffff1633146108b7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610339565b73ffffffffffffffffffffffffffffffffffffffff811661095a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610339565b61096381610ecc565b50565b6040805180820182526000808252602091820181905282518084019093528083529082018190525b606754811015610a1d5760006109d8606783815481106109b0576109b061138b565b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff16856110e4565b805184519192509084906109ed90839061154e565b9052506020808201519084018051610a0690839061154e565b905250819050610a1581611515565b91505061098e565b50919050565b604080518082019091526000808252602082015260655473ffffffffffffffffffffffffffffffffffffffff16610a6e57506040805180820190915260008082526020820152610522565b6065546040517f5bc93d6c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8581166004830152848116602483015260009216906371a25812908690869085908590635bc93d6c9060440160206040518083038186803b158015610af057600080fd5b505afa158015610b04573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b2891906115dd565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e087901b16815273ffffffffffffffffffffffffffffffffffffffff94851660048201529390921660248401526044830152606482015260840160006040518083038186803b158015610b9f57600080fd5b505afa158015610bb3573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610bf991908101906115f6565b905060008060005b8351811015610eb1576000848281518110610c1e57610c1e61138b565b6020026020010151905060008173ffffffffffffffffffffffffffffffffffffffff1663a035b1fe6040518163ffffffff1660e01b815260040160206040518083038186803b158015610c7057600080fd5b505afa158015610c84573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ca89190611690565b73ffffffffffffffffffffffffffffffffffffffff16905060008273ffffffffffffffffffffffffffffffffffffffff16631a6865026040518163ffffffff1660e01b815260040160206040518083038186803b158015610d0857600080fd5b505afa158015610d1c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d4091906116ad565b6fffffffffffffffffffffffffffffffff1690508973ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b158015610db157600080fd5b505afa158015610dc5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610de99190611690565b73ffffffffffffffffffffffffffffffffffffffff161415610e5257610e1d816c0100000000000000000000000084610f73565b610e27908761154e565b9550610e4181836c01000000000000000000000000610f73565b610e4b908661154e565b9450610e9b565b610e6a81836c01000000000000000000000000610f73565b610e74908761154e565b9550610e8e816c0100000000000000000000000084610f73565b610e98908661154e565b94505b5050508080610ea990611515565b915050610c01565b50604080518082019091529182526020820152949350505050565b6033805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600080610f4e61076e565b9050610f6d81602001516006600a610f669190611509565b8351610f73565b91505090565b600080807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8587098587029250828110838203039150508060001415610fcb5760008411610fc057600080fd5b508290049050610593565b808411610fd757600080fd5b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150509392505050565b60008173ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561108c57600080fd5b505afa1580156110a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110c49190611566565b6110cf9060126116df565b6110da90600a611702565b61059390846115a0565b604080518082019091526000808252602082015260006111048484610a23565b9050604051806040016040528061111f836000015187611044565b8152602001826020015181525091505092915050565b8280548282559060005260206000209081019282156111af579160200282015b828111156111af57825182547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff909116178255602090920191600190910190611155565b506108329291505b8082111561083257600081556001016111b7565b73ffffffffffffffffffffffffffffffffffffffff8116811461096357600080fd5b6000602082840312156111ff57600080fd5b8135610593816111cb565b60006020828403121561121c57600080fd5b5035919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561129957611299611223565b604052919050565b600067ffffffffffffffff8211156112bb576112bb611223565b5060051b60200190565b6000806000606084860312156112da57600080fd5b83356112e5816111cb565b92506020848101356112f6816111cb565b9250604085013567ffffffffffffffff81111561131257600080fd5b8501601f8101871361132357600080fd5b8035611336611331826112a1565b611252565b81815260059190911b8201830190838101908983111561135557600080fd5b928401925b8284101561137c57833561136d816111cb565b8252928401929084019061135a565b80955050505050509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600181815b8085111561144257817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821115611428576114286113ba565b8085161561143557918102915b93841c93908002906113ee565b509250929050565b60008261145957506001610522565b8161146657506000610522565b816001811461147c5760028114611486576114a2565b6001915050610522565b60ff841115611497576114976113ba565b50506001821b610522565b5060208310610133831016604e8410600b84101617156114c5575081810a610522565b6114cf83836113e9565b807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821115611501576115016113ba565b029392505050565b6000610593838361144a565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611547576115476113ba565b5060010190565b60008219821115611561576115616113ba565b500190565b60006020828403121561157857600080fd5b815160ff8116811461059357600080fd5b60008282101561159b5761159b6113ba565b500390565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156115d8576115d86113ba565b500290565b6000602082840312156115ef57600080fd5b5051919050565b6000602080838503121561160957600080fd5b825167ffffffffffffffff81111561162057600080fd5b8301601f8101851361163157600080fd5b805161163f611331826112a1565b81815260059190911b8201830190838101908783111561165e57600080fd5b928401925b82841015611685578351611676816111cb565b82529284019290840190611663565b979650505050505050565b6000602082840312156116a257600080fd5b8151610593816111cb565b6000602082840312156116bf57600080fd5b81516fffffffffffffffffffffffffffffffff8116811461059357600080fd5b600060ff821660ff8416808210156116f9576116f96113ba565b90039392505050565b600061059360ff84168361144a56fea2646970667358221220fb2c4284d2a123abe333fab54c9b4a9b0ffc3e5d37e5e17d1141848a137cabdd64736f6c63430008090033";

type PriceOracleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PriceOracleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PriceOracle__factory extends ContractFactory {
  constructor(...args: PriceOracleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PriceOracle> {
    return super.deploy(overrides || {}) as Promise<PriceOracle>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): PriceOracle {
    return super.attach(address) as PriceOracle;
  }
  connect(signer: Signer): PriceOracle__factory {
    return super.connect(signer) as PriceOracle__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PriceOracleInterface {
    return new utils.Interface(_abi) as PriceOracleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PriceOracle {
    return new Contract(address, _abi, signerOrProvider) as PriceOracle;
  }
}
