/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  PositionHelper,
  PositionHelperInterface,
} from "../PositionHelper";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_poolManager",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "TickOutOfBounds",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "positionId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
    ],
    name: "getAmountsForLiquidity",
    outputs: [
      {
        internalType: "uint128",
        name: "token0amount",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "token1amount",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "int24",
        name: "lower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "upper",
        type: "int24",
      },
      {
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
    ],
    name: "getLiquidityForAmounts",
    outputs: [
      {
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "poolManager",
    outputs: [
      {
        internalType: "contract IConcentratedLiquidityPoolManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610dd6380380610dd683398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b610d43806100936000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80639e7c402814610046578063a162ed9114610087578063dc4c90d3146100a8575b600080fd5b610059610054366004610a30565b6100ed565b604080516fffffffffffffffffffffffffffffffff9384168152929091166020830152015b60405180910390f35b61009a610095366004610a86565b61029e565b60405190815260200161007e565b6000546100c89073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161007e565b600080546040517f99fbab88000000000000000000000000000000000000000000000000000000008152600481018590528291829173ffffffffffffffffffffffffffffffffffffffff909116906399fbab88906024016101206040518083038186803b15801561015d57600080fd5b505afa158015610171573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101959190610b7c565b905060006101a68260400151610388565b73ffffffffffffffffffffffffffffffffffffffff16905060006101cd8360600151610388565b73ffffffffffffffffffffffffffffffffffffffff1690506000836000015173ffffffffffffffffffffffffffffffffffffffff1663a035b1fe6040518163ffffffff1660e01b815260040160206040518083038186803b15801561023157600080fd5b505afa158015610245573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102699190610c1a565b73ffffffffffffffffffffffffffffffffffffffff16905061028f8383838a600061071b565b90999098509650505050505050565b600061037c6102ac86610388565b73ffffffffffffffffffffffffffffffffffffffff166102cb86610388565b73ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff1663a035b1fe6040518163ffffffff1660e01b815260040160206040518083038186803b15801561032757600080fd5b505afa15801561033b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061035f9190610c1a565b73ffffffffffffffffffffffffffffffffffffffff16858761078a565b90505b95945050505050565b60008060008360020b1261039f578260020b6103ac565b8260020b6103ac90610c66565b90506103d77ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff27618610c9f565b62ffffff16811115610415576040517ff87dc40c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006001821661043657700100000000000000000000000000000000610448565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff169050600282161561047c576ffff97272373d413259a46990580e213a0260801c5b600482161561049b576ffff2e50f5f656932ef12357cf3c7fdcc0260801c5b60088216156104ba576fffe5caca7e10e4e61c3624eaa0941cd00260801c5b60108216156104d9576fffcb9843d60f6159c9db58835c9266440260801c5b60208216156104f8576fff973b41fa98c081472e6896dfb254c00260801c5b6040821615610517576fff2ea16466c96a3843ec78b326b528610260801c5b6080821615610536576ffe5dee046a99a2a811c461f1969c30530260801c5b610100821615610556576ffcbe86c7900a88aedcffc83b479aa3a40260801c5b610200821615610576576ff987a7253ac413176f2b074cf7815e540260801c5b610400821615610596576ff3392b0822b70005940c7a398e4b70f30260801c5b6108008216156105b6576fe7159475a2c29b7443b29c7fa6e889d90260801c5b6110008216156105d6576fd097f3bdfd2022b8845ad8f792aa58250260801c5b6120008216156105f6576fa9f746462d870fdf8a65dc1f90e061e50260801c5b614000821615610616576f70d869a156d2a1b890bb3df62baf32f70260801c5b618000821615610636576f31be135f97d08fd981231505542fcfa60260801c5b62010000821615610657576f09aa508b5b7a84e1c677de54f3e99bc90260801c5b62020000821615610677576e5d6af8dedb81196699c329225ee6040260801c5b62040000821615610696576d2216e584f5fa1ea926041bedfe980260801c5b620800008216156106b3576b048a170391f7dc42444e8fa20260801c5b60008460020b13156106f257807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff816106ee576106ee610cde565b0490505b640100000000810615610706576001610709565b60005b60ff16602082901c0192505050919050565b6000808486116107405761073961073485898987610840565b61088e565b9050610780565b86851161075d57610756610734858989876108b2565b9150610780565b61076c610734858789876108b2565b915061077d61073485898887610840565b90505b9550959350505050565b60008385116107b4576107ad836c01000000000000000000000000888803610903565b905061037f565b8584116107df576107ad826107d788886c01000000000000000000000000610903565b888803610903565b6000610805836107fd88886c01000000000000000000000000610903565b878903610903565b90506000610823856c010000000000000000000000008a8903610903565b90508082106108325780610834565b815b98975050505050505050565b6000811561086957610862858585036c010000000000000000000000006109d5565b9050610886565b610883858585036c01000000000000000000000000610903565b90505b949350505050565b806fffffffffffffffffffffffffffffffff811681146108ad57600080fd5b919050565b600081156108da576108626108ce606087901b868603866109d5565b85808204910615150190565b836108ec606087901b82860386610903565b816108f9576108f9610cde565b0495945050505050565b600080807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff858709858702925082811083820303915050806000141561095b576000841161095057600080fd5b5082900490506109ce565b80841161096757600080fd5b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150505b9392505050565b60006109e2848484610903565b905081806109f2576109f2610cde565b838509156109ce577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110610a2657600080fd5b6001019392505050565b60008060408385031215610a4357600080fd5b50508035926020909101359150565b73ffffffffffffffffffffffffffffffffffffffff81168114610a7457600080fd5b50565b8060020b8114610a7457600080fd5b600080600080600060a08688031215610a9e57600080fd5b8535610aa981610a52565b94506020860135610ab981610a77565b93506040860135610ac981610a77565b94979396509394606081013594506080013592915050565b604051610120810167ffffffffffffffff81118282101715610b2c577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405290565b80516108ad81610a52565b80516fffffffffffffffffffffffffffffffff811681146108ad57600080fd5b80516108ad81610a77565b805163ffffffff811681146108ad57600080fd5b60006101208284031215610b8f57600080fd5b610b97610ae1565b610ba083610b32565b8152610bae60208401610b3d565b6020820152610bbf60408401610b5d565b6040820152610bd060608401610b5d565b6060820152610be160808401610b68565b608082015260a083015160a082015260c083015160c082015260e083015160e08201526101008084015181830152508091505092915050565b600060208284031215610c2c57600080fd5b81516109ce81610a52565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007f8000000000000000000000000000000000000000000000000000000000000000821415610c9857610c98610c37565b5060000390565b60008160020b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff800000811415610cd557610cd5610c37565b60000392915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fdfea2646970667358221220a5cdf62f1d4e557bda5f2edc1c2838f00b29fa2eb277bb2558d76a6a1090c20564736f6c63430008090033";

type PositionHelperConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PositionHelperConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PositionHelper__factory extends ContractFactory {
  constructor(...args: PositionHelperConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _poolManager: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PositionHelper> {
    return super.deploy(
      _poolManager,
      overrides || {}
    ) as Promise<PositionHelper>;
  }
  getDeployTransaction(
    _poolManager: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_poolManager, overrides || {});
  }
  attach(address: string): PositionHelper {
    return super.attach(address) as PositionHelper;
  }
  connect(signer: Signer): PositionHelper__factory {
    return super.connect(signer) as PositionHelper__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PositionHelperInterface {
    return new utils.Interface(_abi) as PositionHelperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PositionHelper {
    return new Contract(address, _abi, signerOrProvider) as PositionHelper;
  }
}
