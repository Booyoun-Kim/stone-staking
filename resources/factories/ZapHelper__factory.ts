/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ZapHelper, ZapHelperInterface } from "../ZapHelper";

const _abi = [
  {
    inputs: [],
    name: "TickOutOfBounds",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "uint160",
        name: "targetPrice",
        type: "uint160",
      },
    ],
    name: "expectAmount",
    outputs: [
      {
        internalType: "bool",
        name: "zeroForOne",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061148b806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063b585299714610030575b600080fd5b61004361003e3660046111a8565b610064565b60408051931515845260208401929092529082015260600160405180910390f35b600080600061009e6040518060a0016040528060008152602001600081526020016000815260200160008152602001600060020b81525090565b6000808773ffffffffffffffffffffffffffffffffffffffff16638c347f9b6040518163ffffffff1660e01b8152600401604080518083038186803b1580156100e657600080fd5b505afa1580156100fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061011e9190611203565b915091508673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161195506040518060a001604052808373ffffffffffffffffffffffffffffffffffffffff1681526020018973ffffffffffffffffffffffffffffffffffffffff16631a6865026040518163ffffffff1660e01b815260040160206040518083038186803b1580156101c057600080fd5b505afa1580156101d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101f89190611258565b6fffffffffffffffffffffffffffffffff1681526020016000815260200160008152602001876102cc576040517ff30dba93000000000000000000000000000000000000000000000000000000008152600284900b600482015273ffffffffffffffffffffffffffffffffffffffff8b169063f30dba939060240160c06040518083038186803b15801561028b57600080fd5b505afa15801561029f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102c39190611273565b602001516102ce565b825b60020b815250925050506102e18161068c565b156102f3575060009150819050610685565b60008673ffffffffffffffffffffffffffffffffffffffff166354cf2aeb6040518163ffffffff1660e01b815260040160206040518083038186803b15801561033b57600080fd5b505afa15801561034f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610373919061132b565b905060008773ffffffffffffffffffffffffffffffffffffffff1663d0c93a7c6040518163ffffffff1660e01b815260040160206040518083038186803b1580156103bd57600080fd5b505afa1580156103d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103f5919061132b565b905060009450600093505b600061040f846080015161070d565b73ffffffffffffffffffffffffffffffffffffffff169050600087156104eb5760008973ffffffffffffffffffffffffffffffffffffffff16831115610455578261046d565b8973ffffffffffffffffffffffffffffffffffffffff165b905061048486602001518288600001516001610aa0565b61048e908961137f565b97506104b36104a887602001518389600001516000610afa565b8662ffffff16610b3f565b6104bd908861137f565b818752965073ffffffffffffffffffffffffffffffffffffffff8a168311156104e557600191505b50610598565b60008973ffffffffffffffffffffffffffffffffffffffff168310156105115782610529565b8973ffffffffffffffffffffffffffffffffffffffff165b905061054086602001518760000151836000610afa565b61054a908861137f565b96506105646104a887602001518860000151846000610aa0565b61056e908961137f565b818752975073ffffffffffffffffffffffffffffffffffffffff8a1683101561059657600191505b505b8015610673576105aa8a86858b610b60565b60020b60808701526020860181905261066e576105e67ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff27618611397565b60020b856080015160020b14806106235750608085015160020b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff27618145b1561062f575050610681565b61063c856080015161070d565b73ffffffffffffffffffffffffffffffffffffffff1685526106608a86858b610b60565b60020b608087015260208601525b61067a565b5050610681565b5050610400565b5050505b9250925092565b6020810151600090156106a157506000919050565b608082015160020b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff27618148061070757506106fa7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff27618611397565b60020b826080015160020b145b92915050565b60008060008360020b12610724578260020b610731565b8260020b610731906113d6565b905061075c7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff27618611397565b62ffffff1681111561079a576040517ff87dc40c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600182166107bb577001000000000000000000000000000000006107cd565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff1690506002821615610801576ffff97272373d413259a46990580e213a0260801c5b6004821615610820576ffff2e50f5f656932ef12357cf3c7fdcc0260801c5b600882161561083f576fffe5caca7e10e4e61c3624eaa0941cd00260801c5b601082161561085e576fffcb9843d60f6159c9db58835c9266440260801c5b602082161561087d576fff973b41fa98c081472e6896dfb254c00260801c5b604082161561089c576fff2ea16466c96a3843ec78b326b528610260801c5b60808216156108bb576ffe5dee046a99a2a811c461f1969c30530260801c5b6101008216156108db576ffcbe86c7900a88aedcffc83b479aa3a40260801c5b6102008216156108fb576ff987a7253ac413176f2b074cf7815e540260801c5b61040082161561091b576ff3392b0822b70005940c7a398e4b70f30260801c5b61080082161561093b576fe7159475a2c29b7443b29c7fa6e889d90260801c5b61100082161561095b576fd097f3bdfd2022b8845ad8f792aa58250260801c5b61200082161561097b576fa9f746462d870fdf8a65dc1f90e061e50260801c5b61400082161561099b576f70d869a156d2a1b890bb3df62baf32f70260801c5b6180008216156109bb576f31be135f97d08fd981231505542fcfa60260801c5b620100008216156109dc576f09aa508b5b7a84e1c677de54f3e99bc90260801c5b620200008216156109fc576e5d6af8dedb81196699c329225ee6040260801c5b62040000821615610a1b576d2216e584f5fa1ea926041bedfe980260801c5b62080000821615610a38576b048a170391f7dc42444e8fa20260801c5b60008460020b1315610a7757807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81610a7357610a7361140f565b0490505b640100000000810615610a8b576001610a8e565b60005b60ff16602082901c0192505050919050565b60008115610acf57610ac8610abc606087901b86860386611057565b85808204910615150190565b9050610af2565b83610ae1606087901b828603866110b2565b81610aee57610aee61140f565b0490505b949350505050565b60008115610b1c57610ac8858585036c01000000000000000000000000611057565b610b36858585036c010000000000000000000000006110b2565b95945050505050565b6000610b4f8383620f4240611057565b610b59908461143e565b9392505050565b6000808215610ddc5760028460020b866080015160020b81610b8457610b8461140f565b0560020b81610b9557610b9561140f565b0760020b610c675760808501516040517ff30dba9300000000000000000000000000000000000000000000000000000000815260029190910b600482015273ffffffffffffffffffffffffffffffffffffffff87169063f30dba939060240160c06040518083038186803b158015610c0c57600080fd5b505afa158015610c20573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c449190611273565b604001516fffffffffffffffffffffffffffffffff168560200151039150610d2d565b60808501516040517ff30dba9300000000000000000000000000000000000000000000000000000000815260029190910b600482015273ffffffffffffffffffffffffffffffffffffffff87169063f30dba939060240160c06040518083038186803b158015610cd657600080fd5b505afa158015610cea573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d0e9190611273565b604001516fffffffffffffffffffffffffffffffff1685602001510191505b60808501516040517ff30dba9300000000000000000000000000000000000000000000000000000000815260029190910b600482015273ffffffffffffffffffffffffffffffffffffffff87169063f30dba939060240160c06040518083038186803b158015610d9c57600080fd5b505afa158015610db0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dd49190611273565b51905061104e565b60028460020b866080015160020b81610df757610df761140f565b0560020b81610e0857610e0861140f565b0760020b610eda5760808501516040517ff30dba9300000000000000000000000000000000000000000000000000000000815260029190910b600482015273ffffffffffffffffffffffffffffffffffffffff87169063f30dba939060240160c06040518083038186803b158015610e7f57600080fd5b505afa158015610e93573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eb79190611273565b604001516fffffffffffffffffffffffffffffffff168560200151019150610fa0565b60808501516040517ff30dba9300000000000000000000000000000000000000000000000000000000815260029190910b600482015273ffffffffffffffffffffffffffffffffffffffff87169063f30dba939060240160c06040518083038186803b158015610f4957600080fd5b505afa158015610f5d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f819190611273565b604001516fffffffffffffffffffffffffffffffff1685602001510391505b60808501516040517ff30dba9300000000000000000000000000000000000000000000000000000000815260029190910b600482015273ffffffffffffffffffffffffffffffffffffffff87169063f30dba939060240160c06040518083038186803b15801561100f57600080fd5b505afa158015611023573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110479190611273565b6020015190505b94509492505050565b60006110648484846110b2565b905081806110745761107461140f565b83850915610b59577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81106110a857600080fd5b6001019392505050565b600080807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff858709858702925082811083820303915050806000141561110a57600084116110ff57600080fd5b508290049050610b59565b80841161111657600080fd5b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150509392505050565b73ffffffffffffffffffffffffffffffffffffffff811681146111a557600080fd5b50565b600080604083850312156111bb57600080fd5b82356111c681611183565b915060208301356111d681611183565b809150509250929050565b80516111ec81611183565b919050565b8051600281900b81146111ec57600080fd5b6000806040838503121561121657600080fd5b825161122181611183565b915061122f602084016111f1565b90509250929050565b80516fffffffffffffffffffffffffffffffff811681146111ec57600080fd5b60006020828403121561126a57600080fd5b610b5982611238565b600060c0828403121561128557600080fd5b60405160c0810181811067ffffffffffffffff821117156112cf577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040526112db836111f1565b81526112e9602084016111f1565b60208201526112fa60408401611238565b6040820152606083015160608201526080830151608082015261131f60a084016111e1565b60a08201529392505050565b60006020828403121561133d57600080fd5b815162ffffff81168114610b5957600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000821982111561139257611392611350565b500190565b60008160020b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8000008114156113cd576113cd611350565b60000392915050565b60007f800000000000000000000000000000000000000000000000000000000000000082141561140857611408611350565b5060000390565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60008282101561145057611450611350565b50039056fea2646970667358221220a2a7a8aab8cb56cbe80a327fabbc23f4f6f4a0f5785caa94760540a9b203694364736f6c63430008090033";

type ZapHelperConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ZapHelperConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ZapHelper__factory extends ContractFactory {
  constructor(...args: ZapHelperConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ZapHelper> {
    return super.deploy(overrides || {}) as Promise<ZapHelper>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ZapHelper {
    return super.attach(address) as ZapHelper;
  }
  connect(signer: Signer): ZapHelper__factory {
    return super.connect(signer) as ZapHelper__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ZapHelperInterface {
    return new utils.Interface(_abi) as ZapHelperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ZapHelper {
    return new Contract(address, _abi, signerOrProvider) as ZapHelper;
  }
}
