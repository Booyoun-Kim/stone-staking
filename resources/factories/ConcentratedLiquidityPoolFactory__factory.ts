/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ConcentratedLiquidityPoolFactory,
  ConcentratedLiquidityPoolFactoryInterface,
} from "../ConcentratedLiquidityPoolFactory";

const _abi = [
  {
    inputs: [],
    name: "InvalidFeeAndTickSpacing",
    type: "error",
  },
  {
    inputs: [],
    name: "UnauthorisedDeployer",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongTokenOrder",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint24",
        name: "fee",
        type: "uint24",
      },
      {
        indexed: false,
        internalType: "uint24",
        name: "tickSpacing",
        type: "uint24",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "ok",
        type: "bool",
      },
    ],
    name: "UpdateAvailableFeeAndTickSpacing",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint24",
        name: "",
        type: "uint24",
      },
      {
        internalType: "uint24",
        name: "",
        type: "uint24",
      },
    ],
    name: "availableFeeAndTickSpacing",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "configAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_deployData",
        type: "bytes",
      },
    ],
    name: "deployPool",
    outputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "idx",
        type: "uint256",
      },
    ],
    name: "getPoolAddress",
    outputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "token1",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "startIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
    ],
    name: "getPools",
    outputs: [
      {
        internalType: "address[]",
        name: "pairPools",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_masterDeployer",
        type: "address",
      },
      {
        internalType: "address",
        name: "_poolLogger",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isPool",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "masterDeployer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "poolLogger",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "pools",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "token1",
        type: "address",
      },
    ],
    name: "poolsCount",
    outputs: [
      {
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint24",
        name: "fee",
        type: "uint24",
      },
      {
        internalType: "uint24",
        name: "tickSpacing",
        type: "uint24",
      },
      {
        internalType: "bool",
        name: "ok",
        type: "bool",
      },
    ],
    name: "setAvailableFeeAndTickSpacing",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalPoolsCount",
    outputs: [
      {
        internalType: "uint256",
        name: "total",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506115eb806100206000396000f3fe608060405234801561001057600080fd5b50600436106100ff5760003560e01c80635bc93d6c116100975780639ee6465b116100665780639ee6465b14610280578063cf58879a146102ae578063f2fde38b146102ce578063f6ab6d99146102e157600080fd5b80635bc93d6c146101f4578063715018a61461023a57806371a25812146102425780638da5cb5b1461026257600080fd5b80635159d73c116100d35780635159d73c1461017c57806356088ff11461018f578063566a89af146101af5780635b16ebb7146101c157600080fd5b8062a5ae2114610104578063169c4cef1461014157806327c3cae114610154578063485cc95514610167575b600080fd5b6101176101123660046110dd565b610317565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b61011761014f366004611118565b610354565b610117610162366004611188565b6103a6565b61017a610175366004611257565b610829565b005b61017a61018a3660046112a1565b610b38565b6066546101179073ffffffffffffffffffffffffffffffffffffffff1681565b606b545b604051908152602001610138565b6101e46101cf3660046112f1565b60696020526000908152604090205460ff1681565b6040519015158152602001610138565b6101b3610202366004611257565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260676020908152604080832093909416825291909152205490565b61017a610c4f565b610255610250366004611315565b610cdc565b604051610138919061135b565b60335473ffffffffffffffffffffffffffffffffffffffff16610117565b6101e461028e3660046113b5565b606a60209081526000928352604080842090915290825290205460ff1681565b6065546101179073ffffffffffffffffffffffffffffffffffffffff1681565b61017a6102dc3660046112f1565b610df7565b6101176102ef3660046110dd565b60686020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b6000606b828154811061032c5761032c6113e3565b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff1692915050565b6067602052826000526040600020602052816000526040600020818154811061037c57600080fd5b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff16925083915050565b60655460009073ffffffffffffffffffffffffffffffffffffffff1633146103fa576040517f03781a5300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000806000806000868060200190518101906104169190611412565b945094509450945094508373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161115610486576040517f30082a1600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b62ffffff8084166000908152606a602090815260408083209385168352929052205460ff166104e1576040517fb87686b800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040805173ffffffffffffffffffffffffffffffffffffffff808816602083015286169181019190915262ffffff80851660608301528216608082015260a001604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815290829052805160208201206065547fb3fa34ae0000000000000000000000000000000000000000000000000000000084529199509173__$65be32de914435d9328d178fb214e9d46f$__9163b3fa34ae916105c4918c9173ffffffffffffffffffffffffffffffffffffffff90911690600401611487565b60206040518083038186803b1580156105dc57600080fd5b505af41580156105f0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106149190611518565b6000828152606860209081526040808320805473ffffffffffffffffffffffffffffffffffffffff8681167fffffffffffffffffffffffff000000000000000000000000000000000000000092831681179093558c811680875260678087528588208e8416808a52908852868920805460018181018355918b52898b2001805487168817905590895290875285882091885290865284872080548083018255908852868820018054841685179055838752606990955283862080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001686179055606b805495860181559095527fbd43cb8ece8cd1863bcd6082d65c5b0d25665b1ce17980f0da43c0ed545f98b490930180549093168117909255517fd90bda4e000000000000000000000000000000000000000000000000000000008152918616600483015291985063d90bda4e90602401600060405180830381600087803b15801561078157600080fd5b505af1158015610795573d6000803e3d6000fd5b50506066546040517fbd7d1eea00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9182166004820152908a16925063bd7d1eea9150602401600060405180830381600087803b15801561080657600080fd5b505af115801561081a573d6000803e3d6000fd5b50505050505050505050919050565b600054610100900460ff166108445760005460ff1615610848565b303b155b6108d9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a656400000000000000000000000000000000000060648201526084015b60405180910390fd5b600054610100900460ff1615801561091857600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000166101011790555b73ffffffffffffffffffffffffffffffffffffffff8316610965576040517fd92e233d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff82166109b2576040517fd92e233d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6065805473ffffffffffffffffffffffffffffffffffffffff8086167fffffffffffffffffffffffff00000000000000000000000000000000000000009283161790925560668054928516929091169190911790557fc714f2dd66168dd73a29e986fb55ced94ca972bc1b50fba080a30cd2181ee46180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0090811660019081179092557f2b883f690d77611dc5b41697da3a6d594aa0f341ca97ec610373f8acb41cd82e80548216831790557fc1f2c79f3212b2fb2f72db4cee6c6bafcda11bcb7d03110d54331d31dac7dde4805482168317905560026000527fcd6a478cde0daf30ff37adc42daba04d5778c598dbf4183faa56b8a367a7a2fa6020527fb3b7f96f2aee8badb6f0a87d0e8f7b33e35e6a07045fc5a20466ed80851574ed80549091169091179055610b04610f27565b8015610b3357600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff1690555b505050565b60335473ffffffffffffffffffffffffffffffffffffffff163314610bb9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016108d0565b62ffffff8381166000818152606a602090815260408083209487168084529482529182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00168615159081179091558251938452908301939093528101919091527f7a6c71f96c8aa946c5483648392f4440e50d64b7a351ea262129c024a068465f9060600160405180910390a1505050565b60335473ffffffffffffffffffffffffffffffffffffffff163314610cd0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016108d0565b610cda6000610fc6565b565b60608167ffffffffffffffff811115610cf757610cf7611159565b604051908082528060200260200182016040528015610d20578160200160208202803683370190505b50905060005b82811015610dee5773ffffffffffffffffffffffffffffffffffffffff8087166000908152606760209081526040808320938916835292905220610d6a8286611564565b81548110610d7a57610d7a6113e3565b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16828281518110610db757610db76113e3565b73ffffffffffffffffffffffffffffffffffffffff9092166020928302919091019091015280610de68161157c565b915050610d26565b50949350505050565b60335473ffffffffffffffffffffffffffffffffffffffff163314610e78576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016108d0565b73ffffffffffffffffffffffffffffffffffffffff8116610f1b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016108d0565b610f2481610fc6565b50565b600054610100900460ff16610fbe576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e6700000000000000000000000000000000000000000060648201526084016108d0565b610cda61103d565b6033805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff166110d4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e6700000000000000000000000000000000000000000060648201526084016108d0565b610cda33610fc6565b6000602082840312156110ef57600080fd5b5035919050565b73ffffffffffffffffffffffffffffffffffffffff81168114610f2457600080fd5b60008060006060848603121561112d57600080fd5b8335611138816110f6565b92506020840135611148816110f6565b929592945050506040919091013590565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60006020828403121561119a57600080fd5b813567ffffffffffffffff808211156111b257600080fd5b818401915084601f8301126111c657600080fd5b8135818111156111d8576111d8611159565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810190838211818310171561121e5761121e611159565b8160405282815287602084870101111561123757600080fd5b826020860160208301376000928101602001929092525095945050505050565b6000806040838503121561126a57600080fd5b8235611275816110f6565b91506020830135611285816110f6565b809150509250929050565b62ffffff81168114610f2457600080fd5b6000806000606084860312156112b657600080fd5b83356112c181611290565b925060208401356112d181611290565b9150604084013580151581146112e657600080fd5b809150509250925092565b60006020828403121561130357600080fd5b813561130e816110f6565b9392505050565b6000806000806080858703121561132b57600080fd5b8435611336816110f6565b93506020850135611346816110f6565b93969395505050506040820135916060013590565b6020808252825182820181905260009190848201906040850190845b818110156113a957835173ffffffffffffffffffffffffffffffffffffffff1683529284019291840191600101611377565b50909695505050505050565b600080604083850312156113c857600080fd5b82356113d381611290565b9150602083013561128581611290565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080600080600060a0868803121561142a57600080fd5b8551611435816110f6565b6020870151909550611446816110f6565b604087015190945061145781611290565b6060870151909350611468816110f6565b608087015190925061147981611290565b809150509295509295909350565b604081526000835180604084015260005b818110156114b55760208187018101516060868401015201611498565b818111156114c7576000606083860101525b5073ffffffffffffffffffffffffffffffffffffffff93909316602083015250601f919091017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01601606001919050565b60006020828403121561152a57600080fd5b815161130e816110f6565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000821982111561157757611577611535565b500190565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156115ae576115ae611535565b506001019056fea2646970667358221220e8a0d9ca7b49ad19e7c449b36e7d6a30d894618aa445ed6b5ddb0d50393fea8064736f6c63430008090033";

type ConcentratedLiquidityPoolFactoryConstructorParams =
  | [
      linkLibraryAddresses: ConcentratedLiquidityPoolFactoryLibraryAddresses,
      signer?: Signer
    ]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ConcentratedLiquidityPoolFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class ConcentratedLiquidityPoolFactory__factory extends ContractFactory {
  constructor(...args: ConcentratedLiquidityPoolFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        ConcentratedLiquidityPoolFactory__factory.linkBytecode(
          linkLibraryAddresses
        ),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: ConcentratedLiquidityPoolFactoryLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$65be32de914435d9328d178fb214e9d46f\\$__", "g"),
      linkLibraryAddresses["contracts/pool/PoolFactoryLib.sol:PoolFactoryLib"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ConcentratedLiquidityPoolFactory> {
    return super.deploy(
      overrides || {}
    ) as Promise<ConcentratedLiquidityPoolFactory>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ConcentratedLiquidityPoolFactory {
    return super.attach(address) as ConcentratedLiquidityPoolFactory;
  }
  connect(signer: Signer): ConcentratedLiquidityPoolFactory__factory {
    return super.connect(signer) as ConcentratedLiquidityPoolFactory__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ConcentratedLiquidityPoolFactoryInterface {
    return new utils.Interface(
      _abi
    ) as ConcentratedLiquidityPoolFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ConcentratedLiquidityPoolFactory {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ConcentratedLiquidityPoolFactory;
  }
}

export interface ConcentratedLiquidityPoolFactoryLibraryAddresses {
  ["contracts/pool/PoolFactoryLib.sol:PoolFactoryLib"]: string;
}
