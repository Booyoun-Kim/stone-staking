/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TickIndex, TickIndexInterface } from "../TickIndex";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IConcentratedLiquidityPool",
        name: "pool",
        type: "IConcentratedLiquidityPool",
      },
      {
        internalType: "int24",
        name: "lowerOld",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "lower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "upperOld",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "upper",
        type: "int24",
      },
    ],
    name: "adjust",
    outputs: [
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x61108361003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100355760003560e01c8063af605c881461003a575b600080fd5b61004d610048366004610c04565b61007b565b60408051600295860b815293850b602085015291840b8383015290920b606082015290519081900360800190f35b60008060008061008c898887610282565b9097509450600061009d8a896103e4565b90508061014d576040517ff30dba93000000000000000000000000000000000000000000000000000000008152600289900b600482015273ffffffffffffffffffffffffffffffffffffffff8b169063f30dba939060240160c06040518083038186803b15801561010d57600080fd5b505afa158015610121573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101459190610cb0565b51985061016b565b6101588a898b610513565b1561016b576101688a898b61060a565b98505b6101768a8a886107a4565b1561018d5788888988945094509450945050610276565b60006101998b886103e4565b905080610249576040517ff30dba93000000000000000000000000000000000000000000000000000000008152600288900b600482015273ffffffffffffffffffffffffffffffffffffffff8c169063f30dba939060240160c06040518083038186803b15801561020957600080fd5b505afa15801561021d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102419190610cb0565b519750610267565b6102548b888a610513565b15610267576102648b888a61060a565b97505b89898989955095509550955050505b95509550955095915050565b60008060008573ffffffffffffffffffffffffffffffffffffffff1663d0c93a7c6040518163ffffffff1660e01b815260040160206040518083038186803b1580156102cd57600080fd5b505afa1580156102e1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103059190610d68565b905060008061031383610864565b915091508160020b8760020b1261032a578661032c565b815b96508060020b8660020b136103415785610343565b805b95505050600081866103559190610deb565b9050610362600282610e5f565b60020b156103855781610376600183610e81565b6103809190610ee5565b61038f565b61038f8282610ee5565b9350600061039d8387610deb565b90506103aa600282610e5f565b60020b156103c1576103bc8382610ee5565b6103d7565b826103cd826001610f8e565b6103d79190610ee5565b9350505050935093915050565b6000600282900b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff276181480610445575061043c7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff27618610ff1565b60020b8260020b145b156104525750600061050d565b6040517ff30dba93000000000000000000000000000000000000000000000000000000008152600283900b600482015273ffffffffffffffffffffffffffffffffffffffff84169063f30dba939060240160c06040518083038186803b1580156104bb57600080fd5b505afa1580156104cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f39190610cb0565b604001516fffffffffffffffffffffffffffffffff161590505b92915050565b60008260020b8260020b1261052a57506001610603565b6040517ff30dba93000000000000000000000000000000000000000000000000000000008152600283900b600482015260009073ffffffffffffffffffffffffffffffffffffffff86169063f30dba939060240160c06040518083038186803b15801561059657600080fd5b505afa1580156105aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ce9190610cb0565b905080604001516fffffffffffffffffffffffffffffffff16600014806105ff5750806020015160020b8460020b12155b9150505b9392505050565b60008061061885858561095f565b6040517ff30dba93000000000000000000000000000000000000000000000000000000008152600282900b600482015290915060009073ffffffffffffffffffffffffffffffffffffffff87169063f30dba939060240160c06040518083038186803b15801561068757600080fd5b505afa15801561069b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106bf9190610cb0565b90505b6106d182868360200151610bad565b1561079b578160020b8560020b126106ed5780602001516106f0565b80515b6040517ff30dba93000000000000000000000000000000000000000000000000000000008152600282900b600482015290925073ffffffffffffffffffffffffffffffffffffffff87169063f30dba939060240160c06040518083038186803b15801561075c57600080fd5b505afa158015610770573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107949190610cb0565b90506106c2565b50949350505050565b6040517ff30dba93000000000000000000000000000000000000000000000000000000008152600283900b6004820152600090819073ffffffffffffffffffffffffffffffffffffffff86169063f30dba939060240160c06040518083038186803b15801561081257600080fd5b505afa158015610826573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061084a9190610cb0565b9050806020015160020b8360020b13159150509392505050565b60008080610892847ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff27618610deb565b905061089f600282610e5f565b60020b156108c257836108b3826001610f8e565b6108bd9190610ee5565b6108d8565b836108ce826002610f8e565b6108d89190610ee5565b92506000846109067ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff27618610ff1565b6109109190610deb565b905061091d600282610e5f565b60020b156109405784610931600283610e81565b61093b9190610ee5565b610956565b8461094c600183610e81565b6109569190610ee5565b92505050915091565b6040517ff30dba93000000000000000000000000000000000000000000000000000000008152600282900b6004820152600090819073ffffffffffffffffffffffffffffffffffffffff86169063f30dba939060240160c06040518083038186803b1580156109cd57600080fd5b505afa1580156109e1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a059190610cb0565b905080604001516fffffffffffffffffffffffffffffffff16600014610a2e5782915050610603565b60008573ffffffffffffffffffffffffffffffffffffffff1663a00e8f296040518163ffffffff1660e01b815260040160206040518083038186803b158015610a7657600080fd5b505afa158015610a8a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aae9190611030565b90508060020b8560020b1315610b4357610ac88186610e81565b60020b85610af57ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff27618610ff1565b610aff9190610e81565b60020b1215610b3a57610b317ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff27618610ff1565b92505050610603565b91506106039050565b610b4d8582610e81565b60020b610b7a7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2761887610e81565b60020b1215610b3a577ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2761892505050610603565b60008260020b8460020b1380610bc857508160020b8360020b135b949350505050565b73ffffffffffffffffffffffffffffffffffffffff81168114610bf257600080fd5b50565b8060020b8114610bf257600080fd5b600080600080600060a08688031215610c1c57600080fd5b8535610c2781610bd0565b94506020860135610c3781610bf5565b93506040860135610c4781610bf5565b92506060860135610c5781610bf5565b91506080860135610c6781610bf5565b809150509295509295909350565b8051610c8081610bf5565b919050565b80516fffffffffffffffffffffffffffffffff81168114610c8057600080fd5b8051610c8081610bd0565b600060c08284031215610cc257600080fd5b60405160c0810181811067ffffffffffffffff82111715610d0c577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604052610d1883610c75565b8152610d2660208401610c75565b6020820152610d3760408401610c85565b60408201526060830151606082015260808301516080820152610d5c60a08401610ca5565b60a08201529392505050565b600060208284031215610d7a57600080fd5b815162ffffff8116811461060357600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008160020b8360020b80610e0257610e02610d8d565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81147fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80000083141615610e5657610e56610dbc565b90059392505050565b60008260020b80610e7257610e72610d8d565b808360020b0791505092915050565b60008160020b8360020b60008112817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80000001831281151615610ec457610ec4610dbc565b81627fffff018313811615610edb57610edb610dbc565b5090039392505050565b60008160020b8360020b627fffff600082136000841383830485118282161615610f1157610f11610dbc565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8000006000851286820586128184161615610f4c57610f4c610dbc565b60008712925085820587128484161615610f6857610f68610dbc565b85850587128184161615610f7e57610f7e610dbc565b5050509290910295945050505050565b60008160020b8360020b6000821282627fffff03821381151615610fb457610fb4610dbc565b827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff800000038212811615610fe857610fe8610dbc565b50019392505050565b60008160020b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80000081141561102757611027610dbc565b60000392915050565b60006020828403121561104257600080fd5b815161060381610bf556fea2646970667358221220af4a7048a69a664b7b839653fecb9e95eb1b4c9e22d3176b39a428465e0a72a764736f6c63430008090033";

type TickIndexConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TickIndexConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TickIndex__factory extends ContractFactory {
  constructor(...args: TickIndexConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TickIndex> {
    return super.deploy(overrides || {}) as Promise<TickIndex>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TickIndex {
    return super.attach(address) as TickIndex;
  }
  connect(signer: Signer): TickIndex__factory {
    return super.connect(signer) as TickIndex__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TickIndexInterface {
    return new utils.Interface(_abi) as TickIndexInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TickIndex {
    return new Contract(address, _abi, signerOrProvider) as TickIndex;
  }
}
